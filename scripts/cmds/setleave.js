const { drive, getStreamFromURL, getExtFromUrl, getTime } = global.utils;

module.exports = {
	config: {
		name: "setleave",
		aliases: ["setl"],
		version: "1.0",
		author: "Nguy·ªÖn ƒê·ª©c Duy",
		countDown: 5,
		role: 0,
		shortDescription: "ch·ªânh s·ª≠a n·ªôi dung tin nh·∫Øn t·∫°m bi·ªát",
		longDescription: "ch·ªânh s·ª≠a n·ªôi dung tin nh·∫Øn t·∫°m bi·ªát th√†nh vi√™n r·ªùi kh·ªèi nh√≥m chat c·ªßa b·∫°n",
		category: "custom",
		guide: {
			body: "{pn} {{text}} [<n·ªôi dung> | {{reset}}]: ch·ªânh s·ª≠a n·ªôi dung vƒÉn b·∫£n ho·∫∑c reset v·ªÅ m·∫∑c ƒë·ªãnh, nh·ªØng shortcut c√≥ s·∫µn:"
				+ "\n  + {{{userName}}}: t√™n c·ªßa th√†nh vi√™n r·ªùi kh·ªèi nh√≥m"
				+ "\n  + {{{userNameTag}}}: t√™n c·ªßa th√†nh vi√™n r·ªùi kh·ªèi nh√≥m (tag)"
				+ "\n  + {{{boxName}}}:  t√™n c·ªßa nh√≥m chat"
				+ "\n  + {{{type}}}: t·ª± r·ªùi/b·ªã qtv x√≥a kh·ªèi nh√≥m"
				+ "\n  + {{{session}}}:  bu·ªïi trong ng√†y"
				+ "\n\nV√≠ d·ª•:"
				+ "\n   {pn} text {{{userName}}} ƒë√£ {{{type}}} kh·ªèi nh√≥m, see you again ü§ß"
				+ "\n"
				+ "\nReply (ph·∫£n h·ªìi) ho·∫∑c g·ª≠i k√®m m·ªôt tin nh·∫Øn c√≥ file v·ªõi n·ªôi dung {pn} {{file}}: ƒë·ªÉ th√™m t·ªáp ƒë√≠nh k√®m v√†o tin nh·∫Øn r·ªùi kh·ªèi nh√≥m (·∫£nh, video, audio)"
				+ "\n\nV√≠ d·ª•:"
				+ "\n   {pn} {{file reset}}: x√≥a g·ª≠i file",
			attachment: [__dirname + "/assets/guide/setleave/guide1.png"]
		}
	},

	onStart: async function ({ args, threadsData, message, event, commandName }) {
		const { threadID, senderID, body } = event;
		const { data } = await threadsData.get(threadID);

		switch (args[0]) {
			case "text": {
				if (!args[1])
					return message.reply("Vui l√πng nh·∫≠p n·ªôi dung tin nh·∫Øn");
				else if (args[1] == "reset")
					delete data.leaveMessage;
				else
					data.leaveMessage = body.slice(body.indexOf('text') + 5);
				await threadsData.set(threadID, {
					data
				});
				message.reply(data.leaveMessage ? `ƒê√£ ch·ªânh s·ª≠a n·ªôi dung tin nh·∫Øn t·∫°m bi·ªát c·ªßa nh√≥m b·∫°n th√†nh: {{${data.leaveMessage}}}` : "ƒê√£ reset n·ªôi dung tin nh·∫Øn t·∫°m bi·ªát");
				break;
			}
			case "file": {
				if (args[1] == "reset") {
					const { leaveAttachment } = data;
					if (!leaveAttachment)
						return message.reply("Kh√¥ng c√≥ t·ªáp ƒë√≠nh k√®m tin nh·∫Øn t·∫°m bi·ªát n√†o ƒë·ªÉ x√≥a");
					try {
						await Promise.all(data.leaveAttachment.map(fileId => drive.deleteFile(fileId)));
						delete data.leaveAttachment;
					}
					catch (e) { }

					await threadsData.set(threadID, {
						data
					});
					message.reply("ƒê√£ reset t·ªáp ƒë√≠nh k√®m th√†nh c√¥ng");
				}
				else if (event.attachments.length == 0 && (!event.messageReply || event.messageReply.attachments.length == 0))
					return message.reply("H√£y ph·∫£n h·ªìi tin nh·∫Øn n√†y k√®m file ·∫£nh/video/audio", (err, info) => {
						global.GoatBot.onReply.set(info.messageID, {
							messageID: info.messageID,
							author: senderID,
							commandName
						});
					});
				else {
					saveChanges(message, event, threadID, senderID, threadsData);
				}
				break;
			}
			default:
				message.SyntaxError();
				break;
		}
	},

	onReply: async function ({ event, Reply, message, threadsData }) {
		const { threadID, senderID } = event;
		if (senderID != Reply.author)
			return;

		if (event.attachments.length == 0 && (!event.messageReply || event.messageReply.attachments.length == 0))
			return message.reply("Vui l√≤ng reply (ph·∫£n h·ªìi) tin nh·∫Øn c√≥ ch·ª©a file ·∫£nh/video/audio");
		saveChanges(message, event, threadID, senderID, threadsData);
	}
};

async function saveChanges(message, event, threadID, senderID, threadsData) {
	const { data } = await threadsData.get(threadID);
	const attachments = [...event.attachments, ...(event.messageReply?.attachments || [])];
	if (!data.leaveAttachment)
		data.leaveAttachment = [];

	for (const attachment of attachments) {
		const { url } = attachment;
		const ext = getExtFromUrl(url);
		const fileName = `${getTime()}.${ext}`;
		const infoFile = await drive.uploadFile(`setleave_${threadID}_${senderID}_${fileName}`, await getStreamFromURL(url));
		data.leaveAttachment.push(infoFile.id);
	}
	await threadsData.set(threadID, {
		data
	});
	message.reply(`ƒê√£ th√™m ${attachments.length} t·ªáp ƒë√≠nh k√®m v√†o tin nh·∫Øn ch√†o m·ª´ng c·ªßa nh√≥m b·∫°n`);
}
